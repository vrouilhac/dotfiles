"                       _ _ _                        _                    
" __   ___ __ ___  _   _(_) | |__   __ _  ___  __   _(_)_ __ ___  _ __ ___ 
" \ \ / / '__/ _ \| | | | | | '_ \ / _` |/ __| \ \ / / | '_ ` _ \| '__/ __|
"  \ V /| | | (_) | |_| | | | | | | (_| | (__   \ V /| | | | | | | | | (__ 
"   \_/ |_|  \___/ \__,_|_|_|_| |_|\__,_|\___|   \_/ |_|_| |_| |_|_|  \___|
                                                                         
" Summary
"		- Settings.......................15
"		- Plugins........................72
"		- Plugin Settings................95
"		- Plugin Mappings...............121
"		- Mappings......................146
"		- Autocommands..................176

" ~~~ Settings ~~~
filetype plugin indent on	
syntax on			

set nocompatible
set updatetime=50

set number	
set relativenumber
set cmdheight=2	
set incsearch
set colorcolumn=80
set autoindent
set signcolumn=yes
set nowrap
set tabstop=2
set softtabstop=2
set shiftwidth=2
set noswapfile
set nobackup
set undodir=~/.vim/undo_dir
set undofile
set scrolloff=8
set noshowmode
set hidden
set nohlsearch			
set laststatus=2		
set re=0
set cursorline
set background=dark
set foldmethod=indent
set foldlevelstart=20

set mouse=a

augroup vrouilhac_statusline
	autocmd!
	autocmd ColorScheme *
				\ hi MYLineNumbers term=bold ctermfg=181 ctermbg=236 |
				\ hi MYBufferNumber term=bold ctermfg=234 ctermbg=181 |
				\ hi MYGitBranch term=bold ctermfg=234 ctermbg=251 |
				\ hi MYModified term=bold ctermfg=208 ctermbg=236 |
				\ hi MYNormal term=bold ctermfg=253 ctermbg=236
augroup END

set statusline=
set statusline+=%#MYNormal#
set statusline+=\ 
set statusline+=[%t]
set statusline+=%#MYModified#
set statusline+=\ %m\ 
set statusline+=%#MYBufferNumber#
set statusline+=\ b:%n\ 
set statusline+=%#MYLineNumbers#
set statusline+=\ %l/%L\ 
set statusline+=%#MYNormal#

" ~~~ Plugins ~~~

" used to load tests project
execute pathogen#infect()

call plug#begin('~/.vim/plugged')
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'adelarsq/vim-matchit'

" Plug 'wadackel/vim-dogrun'
Plug 'gruvbox-community/gruvbox'

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

Plug 'dense-analysis/ale'
Plug 'airblade/vim-gitgutter'


Plug 'wakatime/vim-wakatime'

Plug 'vrouilhac/vim-search-mini'
Plug 'vrouilhac/vim-zettelkasten'
call plug#end()

" ~~~ Plugin Settings ~~~
" gruvbox
let g:gruvbox_contrast_dark='hard'
colorscheme gruvbox
highlight Normal guibg=none

" ale
let g:ale_fixers = {
	\ 'javascript': ['prettier', 'eslint'],
	\ 'rust': ['rls', 'rust-analysis'],
	\ 'go': ['gofmt', 'golint', 'gopls', 'govet'],
	\ 'zsh': ['shell']
	\ }
let g:ale_fix_on_save = 1
let g:ale_hover_to_preview=1
let g:ale_hover_to_floating_preview=1
let g:ale_floating_preview=1
let g:ale_floating_window_border=['│', '─', '╭', '╮', '╯', '╰']
let g:ale_completion_enabled=1
let g:ale_completion_autoimport = 0
set omnifunc=ale#completion#OmniFunc

" vim-search-mini
let g:vsm_exclude_directories="{.git,node_modules,dist,ios,android,build,target,coverage}"
let g:vsm_default_location="."

" netrw
let g:netrw_liststyle=3
let g:netrw_browse_split=0
let g:netrw_banner=0

" ~~~ Plugin Mappings ~~~
let mapleader=" "
" FZF
nnoremap <leader>bo :Buffers<CR>
nnoremap <leader>hi :History<CR>
nnoremap <C-P> :Files<CR>
nnoremap <leader>gs :GFiles?<CR>

" vim-search-mini
nnoremap <leader>f :VimSearchMini 
nnoremap <leader>* viwy:VimSearchMini <C-R>"<CR>

" ale
nnoremap <leader>i :ALEHover<CR>
nnoremap gd :ALEGoToDefinition<CR>
nnoremap <leader>ne :lnext<CR>
nnoremap <leader>pe :lprevious<CR>

" gitgutter
nnoremap <leader>gh :GitGutterLineHighlightsToggle<CR>
nnoremap <leader>nh :GitGutterNextHunk<CR>
nnoremap <leader>ph :GitGutterPrevHunk<CR>
nnoremap <leader>sh :GitGutterStageHunk<CR>
nnoremap <leader>guh :GitGutterUndoHunk<CR>

" ~~~ Mappings ~~~
nnoremap <leader>so :source $MYVIMRC<CR>
nnoremap <leader>v :e $MYVIMRC<CR>

nnoremap <C-J> 7j
nnoremap <C-K> 7k
nnoremap <C-H> ^
nnoremap <C-L> $
vnoremap <C-J> 7j
vnoremap <C-K> 7k
vnoremap <C-H> ^
vnoremap <C-L> $

nnoremap <leader>y "+y
nnoremap <leader>pa "+p
vnoremap <leader>y "+y
vnoremap <leader>pa "+p

nnoremap <leader>u ~
vnoremap <leader>u ~

nnoremap zz za
nnoremap ZZ zA

nnoremap <C-F> /
nnoremap <C-N> :Lexplore<CR>

nnoremap <leader>db :bwipeout<CR>
nnoremap <leader>Q :copen<CR>

" ~~~ Auto commands ~~~
augroup vrouilhac
	autocmd!
	autocmd FileType 
				\javascript,
				\typescript,
				\javascriptreact,
				\typescriptreact 
				\set suffixesadd+=.js,.ts,.tsx,.jsx
augroup END
" augroup vrouilhac
" 	autocmd!
" 	autocmd FileType javascript :iabbrev <buffer> logs console.log("
" 	autocmd FileType javascript :iabbrev <buffer> logo console.log({ 
" augroup END
